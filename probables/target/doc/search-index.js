var searchIndex = JSON.parse('{\
"probables":{"doc":"","t":[5,5,0,4,3,7,13,7,13,13,13,3,4,13,8,11,11,11,11,11,11,11,11,10,11,11,11,12,10,11,10,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,10,11,10,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["main","new_node","tree","Branch","CachedResult","DEPTH","Err","HEIGHT","Left","Ok","Parent","PrimaryNode","Results","Right","Tree","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch_leaf","branch_leaf","clone","clone_into","data","depth","depth","eagleview","eagleview","fmt","fmt","fmt","from","from","from","from","in_mem","into","into","into","into","left","new","new_branch","new_branch","recursive_leaf","recursive_leaf","right","state","state","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["probables","","","probables::tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","New Node is a method that takes a single argument string. …","Tree is a module which contain collection of objects, …","Branch Enumeration have three Variants. Branch Enumeration …","Cache Result is an generic object. This object contains in …","Another static variable is Depth. Depth is level pointer. …","","Height is a static variable. Height maximum space for Bob …","Likewise parent, left and right are also special variants. …","","Parent is the special variant. These variants are trigger …","Primary Node is an object. Few deriveable traits attached …","Results have only one derivable traits Debug. Results …","","","","","","","","","","","Branch Leaf is a receiver provided by tree module &amp; tree …","Branch Leaf is a receiver provided by tree module &amp; tree …","","","Data field is dynamic arrary of String.","Depth is a receiver method which takes in mutable self …","Depth is a receiver method which takes in mutable self …","Eagleview Reciver takes a bunch of arguments as …","Eagleview Reciver takes a bunch of arguments as …","","","","","","","","","","","","","Dynamic Array of Node (Node*)","new is an receiver method which takes in memory generic …","New Branch take mutable object , Node Object , Branch …","New Branch take mutable object , Node Object , Branch …","Recursive Receiver takes a bunch of arguments as …","Recursive Receiver takes a bunch of arguments as …","Dynamic Array of Node (Node*) ","state is another receiver method which takes in mutable …","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,2,1,2,0,0,2,0,3,4,1,2,3,4,1,2,5,4,4,4,4,5,4,5,4,4,1,2,3,4,1,2,3,3,4,1,2,4,3,5,4,5,4,4,3,3,4,3,4,1,2,3,4,1,2,3,4,1,2],"f":[[[]],[[["string",3]],["primarynode",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["primarynode",3],["branch",4]],[["primarynode",3],["vec",3,["primarynode"]]]],[[["primarynode",3],["branch",4]],[["primarynode",3],["vec",3,["primarynode"]]]],[[],["primarynode",3]],[[]],null,[[["branch",4]],["usize",15]],[[["branch",4]],["usize",15]],[[["string",3],["usize",15],["branch",4]],["results",4]],[[["string",3],["usize",15],["branch",4]],["results",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],null,[[],["cachedresult",3]],[[["primarynode",3],["u8",15],["branch",4]],[["primarynode",3],["vec",3,["primarynode"]]]],[[["primarynode",3],["u8",15],["branch",4]],[["primarynode",3],["vec",3,["primarynode"]]]],[[["usize",15],["branch",4]],["usize",15]],[[["usize",15],["branch",4]],["usize",15]],null,[[["string",3]],["string",3]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Results"],[4,"Branch"],[3,"CachedResult"],[3,"PrimaryNode"],[8,"Tree"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};