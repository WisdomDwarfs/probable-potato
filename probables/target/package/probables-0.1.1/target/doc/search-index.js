var searchIndex = JSON.parse('{\
"probables":{"doc":"","t":[5,5,0,4,13,13,13,13,3,4,13,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11],"n":["main","new_node","tree","Branch","Err","Left","Ok","Parent","PrimaryNode","Results","Right","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","fmt","fmt","fmt","from","from","from","into","into","into","leaf","left","right","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["probables","","","probables::tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","This module are designed to implement tree structure. …","Either a branch is left one or right one  Imagine binary …","","","","","tree props implemented","enums are helpful because, it tells us why program fail ?","","","","","","","","","","data attribute: this branch hold some leaves. Each leave …","","","","","","","","","","","left attribute: this branch have connection with other …","right attribute: this branch have connection with other …","","","","","","","","","",""],"i":[0,0,0,0,1,2,1,2,0,0,2,3,1,2,3,1,2,3,3,3,3,1,2,3,1,2,3,1,2,3,3,3,3,3,1,2,3,1,2,3,1,2],"f":[[[]],[[["string",3]],["primarynode",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["primarynode",3]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["branch",4],["primarynode",3]],[["vec",3,["primarynode"]],["primarynode",3]]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Results"],[4,"Branch"],[3,"PrimaryNode"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};